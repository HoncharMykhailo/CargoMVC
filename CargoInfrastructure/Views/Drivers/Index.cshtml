@model IEnumerable<CargoDomain.Model.Driver>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager




@{
    User currentUser = null;
    bool isAdmin = false;

    if (User != null)
    {
        // Get the current user
        currentUser = await UserManager.GetUserAsync(User);

        // Check if the user is an administrator
        if (currentUser != null)
        {
            isAdmin = await UserManager.IsInRoleAsync(currentUser, "Admin");
        }
    }
}


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (isAdmin)
{
<p>
    @Html.ActionLink("Add driver","Create", new {truckId = ViewBag.TruckId})
</p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Truck)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Truck.Model)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
