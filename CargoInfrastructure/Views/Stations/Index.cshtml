@model IEnumerable<CargoDomain.Model.Station>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@{
    User currentUser = null;
    bool isAdmin = false;

    if (User != null)
    {
        // Get the current user
        currentUser = await UserManager.GetUserAsync(User);

        // Check if the user is an administrator
        if (currentUser != null)
        {
            isAdmin = await UserManager.IsInRoleAsync(currentUser, "Admin");
        }
    }
}



@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>



<div>
    <h3>Оберіть excel-файл для завантаження</h3>
    @using (Html.BeginForm("Import", "Categories", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm-excel" }))
    {
        <div>
            Завантажте Excel-файл:
            <input type="file" name="fileExcel" id="fileExcel" />
            <div>
                <input type="submit" value="Завантажити" />
            </div>
        </div>
    }
</div>



@if (isAdmin)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CityName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>





<div id="chart_div"></div>
            
@section scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart'] });

        google.charts.setOnLoadCallback(function () {
            drawChart();
            drawDepartmentChart();
        });

        function drawChart() {
            fetch('/api/chart/StationData')
                .then(response => response.json())
                .then(stationData => {
                    var data = new google.visualization.DataTable();
                    data.addColumn('string', 'Station');
                    data.addColumn('number', 'Entries');
                    stationData.forEach(function (row) {
                        data.addRow(row);
                    });
                    var colors = [
                        '#3366CC', '#DC3912', '#FF9900', '#109618', '#990099',
                        '#3B3EAC', '#0099C6', '#DD4477', '#66AA00', '#B82E2E',
                        '#316395', '#994499', '#22AA99', '#AAAA11', '#6633CC',
                        '#E67300', '#8B0707', '#329262', '#5574A6', '#3B3EAC'
                    ];

                    var options = {
                        title: 'The Stations diagram:',
                        titleTextStyle: {
                            fontSize: 20,
                            bold: true
                        },
                        pieHole: 0.4,
                        colors: colors,
                        legend: {
                            position: 'right',
                            alignment: 'center',
                            textStyle: {
                                color: 'black',
                                fontSize: 18
                            },
                            scrollArrows: 'none'
                        },
                        chartArea: {
                            left: 10,
                            top: 30,
                            width: '100%',
                            height: '80%'
                        },
                        height: 600,
                    };

                    var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
                    chart.draw(data, options);
                })
                .catch(error => {
                    console.error('Error fetching station data:', error);
                });
        }
    </script>
}


